package main

import "fmt"

/*
Problem 1:
 For a positive integer nn, define f(n)f(n) as the least positive multiple of nn that,
written in base 10, uses only digits ≤2≤2. Thus,
f(2)=2,f(3)=12,f(7)=21,f(42)=210,f(89)=1121222,…f(2)=2,f(3)=12,f(7)=21,f(42)=210,f(89)=1121222,…

Also,
∑n=1100f(n)n=11363107.∑n=1100​nf(n)​=11363107.

Find
∑n=11000f(n)n.∑n=11000​nf(n)​.
*/

/*
Problem 2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1,2,3,5,8,13,21,34,55,89,…1,2,3,5,8,13,21,34,55,89,…

By considering the terms in the Fibonacci sequence whose values do not exceed four million, f
ind the sum of the even-valued terms.
*/

/*
Problem 3:
A firecracker explodes at a height of 100 m above level ground.
It breaks into a large number of very small fragments, which move in every direction;

	all of them have the same initial velocity of 20 m/s. We assume that the fragments move without air resistance,
	in a uniform gravitational field with g=9.81 m/s2g=9.81m/s2.

Find the volume of the region (using ππ for calculations) that the fragments move before reaching the ground.

	Give the answer rounded to four decimal places.
*/

/*
Problem 4: A Pythagorean triplet is a set of three natural numbers, a<b<ca<b<c, for which,
a2+b2=c2.a2+b2=c2.

For example, 32+42=9+16=25=5232+42=9+16=25=52. There exists exactly one Pythagorean triplet for which
a+b+c=1000.a+b+c=1000.
Find the product abcabc.
*/
func pythagoreanTripletsBruteForce(sum int) {
	// Iterate through all possible values of a, b, and c, and check if they form
	// a Pythagorean triplet whose sum is 1000.
	for a := 1; a <= sum; a++ {
		for b := a + 1; b < sum-a; b++ {
			for c := b + 1; c < sum-b; c++ {
				if a*a+b*b == c*c && a+b+c == sum {
					fmt.Println("a =", a, "b =", b, "c =", c)
					return
				}
			}
		}
	}
}

/*
Problem 5
	Starting in the top left corner of a 2x2 grid,
   and only being able to move to the right and down,
   there are exactly 6 routes to the bottom right corner.
   How many such routes are there through a 20x20 grid?
*/

/*
Problem 6:
Let d(n)d(n) be defined as the sum of the divisors of nn (numbers less than or equal to nn which divide evenly into nn).
If d(a)=bd(a)=b and d(b)=ad(b)=a, and a≠ba=b, then aa and bb are an amicable pair, and each of aa and bb are called amicable numbers.
For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55, and 110; therefore, d(220)=284d(220)=284.
The proper divisors of 284 are 1, 2, 4, 71, and 142; so d(284)=220d(284)=220. Hence, 220 and 284 are an amicable pair.

Evaluate the sum of all the amicable numbers under 10000.
*/

/*
Problem 7:
The sum of the squares of the digits of nn is calculated repeatedly (in numbers less than nn) until only a single digit remains.
For example, for n=82n=82:
82+22=64+4=68,62+82=36+64=100,12+02+02=1.82+22=64+4=68,62+82=36+64=100,12+02+02=1.

If the resulting number is 1, nn is said to be happy. Otherwise, it is unhappy.

	Of the first 10 happy numbers, only the numbers 1, 7, 10, 13, 19, 23, 28, 31, 32, 44 contain the same digits.

Find the smallest positive number less than 251758, containing the digits 2, 7, 3, x, y, z (distinct digits),

	such that 2x, 3x, 4x, 5x, and 6x are happy numbers.
*/
func main() {
	fmt.Println("------------  TechFest :: Tsihoarana RASOLOFONDRAIBE  -----------")
}
